 ------
 Submitting a Patch
 ------
 Benjamin Bentmann
 ------
 ------

~~ $Id: submitting-a-patch.apt 12954 2010-10-31 11:11:05Z dennisl $

~~ 
~~ Licensed to the Apache Software Foundation (ASF) under one
~~ or more contributor license agreements.  See the NOTICE file
~~ distributed with this work for additional information
~~ regarding copyright ownership.  The ASF licenses this file
~~ to you under the Apache License, Version 2.0 (the
~~ "License"); you may not use this file except in compliance
~~ with the License.  You may obtain a copy of the License at
~~
~~  http://www.apache.org/licenses/LICENSE-2.0
~~
~~ Unless required by applicable law or agreed to in writing,
~~ software distributed under the License is distributed on an
~~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~~ KIND, either express or implied.  See the License for the
~~ specific language governing permissions and limitations
~~ under the License.
~~

Submitting a Patch

  What's the quickest way to get a problem solved? Well, the Mojo plugins are open-source so you can always go and try
  patching them yourself. Every plugin web site has a page titled "Source Repository" that provides instructions on how
  to checkout the plugin's source code.

  When creating a patch, please adopt our {{{../development/guidelines.html}code conventions}}. In case the existing
  code doesn't follow these conventions, avoid reformatting of lines that are otherwise unrelated to the issue being
  fixed. A committer will need to review a patch before its acceptance and any noise in the diff due to
  whitespace/formatting changes makes this harder. Furthermore, be sure to use only those classes/methods and language
  features that are supported by the minimum Java version targetted by the plugin.

  Once the patch is completed, the preferred way to share it with the community is to attach it to the corresponding
  JIRA issue. Posting the patch literally inside a comment in JIRA or to the mailing list is discouraged as this
  complicates its application to the source code. Committers will definitively have a hard job if the patch is not
  provided in diff format. For instance, the zipped project directory of the patched plugin or even entire source files
  are usually not helpful.

  Again, patches need to be reviewed by committers so please avoid cumulative patches that try to fix several issues
  at once. Instead, rather submit multiple patches that address each issue independently. Finally remember that - just
  like good code - a good patch comes with a test to prove its proper function.
